# 先将此配置重命名为application.yml，然后修改数据库连接信息、Redis配置信息、邮箱配置信息即可

spring.application.name: data-archiving

server.port: 8081

# 数据库配置
spring:
  datasource:
        url: jdbc:mysql://localhost:3306/inventory_system?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
        username: 账号
        password: 密码
        driver-class-name: com.mysql.cj.jdbc.Driver

  mail:
    host: smtp.163.com # 邮箱服务器地址
    username: XX@163.com # 邮箱账号
    password: 授权码 # 邮箱授权码（而不是登录密码）
    port: 465
    protocol: smtp
    default-encoding: utf-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            enable: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory

# 日志配置
logging:
    level:
        root: INFO
        com.yourcompany.orderarchive: DEBUG


# Redisson 配置
redisson:
    address: redis://localhost:6379  # Redis服务器地址
    password: 密码  # Redis服务器密码，默认为空
    database: 0  # Redis数据库索引，默认为0

# 自定义配置
data-archiving:
    lastProcessedId: 200001 #  切表的起始位置，第一次切表先去数据库里面起始位置的id值
    maxBatchSize: 500 # 每次切500条数据
    archiveTablePrefix: order_info # 切分后的表名称前缀
    oldTableName: order_info # 被切分的原始表名称